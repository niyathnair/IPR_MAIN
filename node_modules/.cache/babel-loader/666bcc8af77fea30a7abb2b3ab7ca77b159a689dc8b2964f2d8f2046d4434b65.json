{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nickn\\\\Desktop\\\\Task_Manager_psql\\\\task-manager\\\\src\\\\components\\\\SystemMonitor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SystemMonitor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemMonitor() {\n  _s();\n  const [stats, setStats] = useState(null);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/stats');\n        setStats(response.data);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      }\n    };\n    fetchStats();\n    const interval = setInterval(fetchStats, 5000); // Fetch stats every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SystemMonitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"System Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CPU Load: \", stats.cpu.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Memory Usage:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total: \", (stats.memory.total / 1024 ** 3).toFixed(2), \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Used: \", (stats.memory.used / 1024 ** 3).toFixed(2), \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Free: \", (stats.memory.free / 1024 ** 3).toFixed(2), \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Running Processes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPU %\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Memory %\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stats.processes.slice(0, 10).map(process => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: process.pid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: process.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: process.cpu.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (process.mem / stats.memory.total * 100).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, process.pid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemMonitor, \"QHCAg5+sC7SrLiGx+x4h2IICBFk=\");\n_c = SystemMonitor;\nexport default SystemMonitor;\nvar _c;\n$RefreshReg$(_c, \"SystemMonitor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SystemMonitor","_s","stats","setStats","fetchStats","response","get","data","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","cpu","toFixed","memory","total","used","free","processes","slice","map","process","pid","name","mem","_c","$RefreshReg$"],"sources":["C:/Users/nickn/Desktop/Task_Manager_psql/task-manager/src/components/SystemMonitor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './SystemMonitor.css';\r\n\r\nfunction SystemMonitor() {\r\n  const [stats, setStats] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/stats');\r\n        setStats(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching stats:', error);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n    const interval = setInterval(fetchStats, 5000); // Fetch stats every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (!stats) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"SystemMonitor\">\r\n      <h1>System Monitor</h1>\r\n      <h2>CPU Load: {stats.cpu.toFixed(2)}%</h2>\r\n      <h2>Memory Usage:</h2>\r\n      <ul>\r\n        <li>Total: {(stats.memory.total / (1024 ** 3)).toFixed(2)} GB</li>\r\n        <li>Used: {(stats.memory.used / (1024 ** 3)).toFixed(2)} GB</li>\r\n        <li>Free: {(stats.memory.free / (1024 ** 3)).toFixed(2)} GB</li>\r\n      </ul>\r\n      <h2>Running Processes:</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>PID</th>\r\n            <th>Name</th>\r\n            <th>CPU %</th>\r\n            <th>Memory %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {stats.processes.slice(0, 10).map((process) => (\r\n            <tr key={process.pid}>\r\n              <td>{process.pid}</td>\r\n              <td>{process.name}</td>\r\n              <td>{process.cpu.toFixed(2)}</td>\r\n              <td>{(process.mem / stats.memory.total * 100).toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemMonitor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}